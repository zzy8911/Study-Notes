input子系统分为两类
input_handler：各个handler，可以用于处理各种device的事件，如evdev.c
input_dev：设置合适的handler来处理设备的event，如s3c2410_ts.c

input子系统有两条链表(input_handler_list/input_dev_list)，如注册input_dev时需遍历input_dev_list上所有的input_handler，反之类似。
input_register_handler
	list_for_each_entry(dev, &input_dev_list, node)
		input_attach_handler(dev, handler);

input_register_device
	list_for_each_entry(handler, &input_handler_list, node)
		input_attach_handler(dev, handler);

evdev.c：handler
	evdev可以匹配任意input_dev，它主要功能是生成/dev/input/eventx节点，并且构建了该节点的基本接口函数。
	当input_dev report event时，会callback evdev的handler->events(将event数据保存到client->buffer[]中)，当上层read /dev/input/eventx时将event copy_to_user到用户空间

input_dev connect handler时将会new handle，handle中有input_dev和input_handler的信息(handle->dev = input_dev，handle->handler = handler)。并且一个input_dev对应多个handle，handle对应一种handler，即构建了一个input_dev可以有多种handler对它进行处理的框架。
